import{a as p,i as c,S as f}from"./assets/vendor-CRCB-GUD.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();async function h(r,s=1,n=15){const e=`https://pixabay.com/api/?key=45999578-eb7202f1a65d28d69ebdccc58&q=${encodeURIComponent(r)}&image_type=photo&orientation=horizontal&safesearch=true&page=${s}&per_page=${n}`;try{const t=await p.get(e),i=t.data;if(t.status!==200)throw new Error("Failed to fetch images");return{images:i.hits,totalHits:i.totalHits}}catch(t){throw console.error("Error fetching images:",t),t}}function b(r,s){if(!r||r.length===0){c.warning({title:"No results",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight",timeout:5e3});return}const n=r.map(o=>`
        <li class="gallery-item">
          <a href="${o.largeImageURL}">
            <img src="${o.webformatURL}" alt="${o.tags}" width="360" height="152" />
          </a>
          <div class="gallery-item-info">
            <p class="stats"><b>Likes</b> ${o.likes}</p>
            <p class="stats"><b>Views</b> ${o.views}</p>
            <p class="stats"><b>Comments</b> ${o.comments}</p>
            <p class="stats"><b>Downloads</b> ${o.downloads}</p>
          </div>
        </li>
      `).join("");s.insertAdjacentHTML("beforeend",n)}function w(r){r.innerHTML=""}function L(){c.info({title:"End of results",message:"We're sorry, but you've reached the end of search results.",position:"topRight",timeout:5e3})}let E=new f(".gallery-list a",{}),g="",a=1;const u=15,v=document.getElementById("search-form"),y=document.getElementById("gallery"),d=document.getElementById("load-more"),l=document.querySelector(".loader");v.addEventListener("submit",function(r){r.preventDefault();const s=document.getElementById("search-input").value.trim();if(!s){c.error({message:"Please enter a search word."});return}g=s,a=1,w(y),m()});d.addEventListener("click",function(){m()});window.addEventListener("DOMContentLoaded",()=>{l.style.display="none"});async function m(){l.style.display="inline-block",d.style.display="none";try{const{images:r,totalHits:s}=await h(g,a,u);if(r.length===0&&a===1){c.warning({title:"No results",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight",timeout:5e3}),l.style.display="none";return}b(r,y),E.refresh();const n=document.querySelector(".gallery-item"),o=n?n.getBoundingClientRect().height:0;(a-1)*u+r.length>=s?(d.style.display="none",L()):d.style.display="block",l.style.display="none",o>0&&window.scrollBy({top:2*o,behavior:"smooth"}),a+=1}catch(r){console.error("Error fetching images:",r),c.error({title:"Error",message:"An error occurred while fetching images. Please try again later.",position:"topRight",timeout:5e3}),l.style.display="none"}}
//# sourceMappingURL=index.js.map
